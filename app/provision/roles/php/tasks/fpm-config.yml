---
- name: "php-fpm listen"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_pool_path }}"
    regexp: "^;?listen ="
    line: "listen = {{ php_fpm_listen }}"
    state: present
  notify: "php-fpm restart"

- name: "php-fpm user"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_pool_path }}"
    regexp: "^;?user ="
    line: "user = {{ php_fpm_user }}"
    state: present
  notify: "php-fpm restart"

- name: "php-fpm group"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_pool_path }}"
    regexp: "^;?group ="
    line: "group = {{ php_fpm_group }}"
    state: present
  notify: "php-fpm restart"

- name: "php-fpm listen owner"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_pool_path }}"
    regexp: "^;?listen.owner ="
    line: "listen.owner = {{ php_fpm_user }}"
    state: present
  notify: "php-fpm restart"

- name: "php-fpm listen group"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_pool_path }}"
    regexp: "^;?listen.group ="
    line: "listen.group = {{ php_fpm_group }}"
    state: present
  notify: "php-fpm restart"

- name: "short open tag"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?short_open_tag ="
    line: "short_open_tag = {{ php_fpm_short_open_tag }}"
    state: present
  notify: "php-fpm restart"

- name: "expose php"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?expose_php ="
    line: "expose_php = {{ php_fpm_expose_php }}"
    state: present
  notify: "php-fpm restart"

- name: "max execution time"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?max_execution_time ="
    line: "max_execution_time = {{ php_fpm_max_execution_time }}"
    state: present
  notify: "php-fpm restart"

- name: "max input time"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?max_input_time ="
    line: "max_input_time = {{ php_fpm_max_input_time }}"
    state: present
  notify: "php-fpm restart"

- name: "memory limit"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?memory_limit ="
    line: "memory_limit = {{ php_fpm_memory_limit }}"
    state: present
  notify: "php-fpm restart"

- name: "error reporting"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?error_reporting ="
    line: "error_reporting = {{ php_fpm_error_reporting }}"
    state: present
  notify: "php-fpm restart"

- name: "display errors"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?display_errors ="
    line: "display_errors = {{ php_fpm_display_errors }}"
    state: present
  notify: "php-fpm restart"

- name: "display startup errors"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?display_startup_errors ="
    line: "display_startup_errors = {{ php_fpm_display_startup_errors }}"
    state: present
  notify: "php-fpm restart"

- name: "track errors"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?track_errors ="
    line: "track_errors = {{ php_fpm_track_errors }}"
    state: present
  notify: "php-fpm restart"

- name: "html errors"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?html_errors ="
    line: "html_errors = {{ php_fpm_html_errors }}"
    state: present
  notify: "php-fpm restart"

- name: "variables order"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?variables_order ="
    line: 'variables_order = "{{ php_fpm_variables_order }}"'
    state: present
  notify: "php-fpm restart"

- name: "request order"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?request_order ="
    line: 'request_order = "{{ php_fpm_request_order }}"'
    state: present
  notify: "php-fpm restart"

- name: "post max size"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?post_max_size ="
    line: "post_max_size = {{ php_fpm_post_max_size }}"
    state: present
  notify: "php-fpm restart"

- name: "default mimetype"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?default_mimetype ="
    line: 'default_mimetype = "{{ php_fpm_default_mimetype }}"'
    state: present
  notify: "php-fpm restart"

- name: "default charset"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?default_charset ="
    line: 'default_charset = "{{ php_fpm_default_charset }}"'
    state: present
  notify: "php-fpm restart"

- name: "upload max filesize"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?upload_max_filesize ="
    line: "upload_max_filesize = {{ php_fpm_upload_max_filesize }}"
    state: present
  notify: "php-fpm restart"

- name: "max file uploads"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?max_file_uploads ="
    line: "max_file_uploads = {{ php_fpm_max_file_uploads }}"
    state: present
  notify: "php-fpm restart"

- name: "php default timezone"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?date.timezone ="
    line: "date.timezone = {{ php_fpm_date_timezone }}"
    state: present
  notify: "php-fpm restart"

- name: "default include path"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: '^;?include_path = "\.:/'
    line: 'include_path = "{{ php_fpm_include_path }}"'
    state: present
  when: php_fpm_enable_includes
  notify: "php-fpm restart"

- name: "assertions enabled"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?zend.assertions ="
    line: "zend.assertions = {{ php_fpm_assert_enable }}"
    state: present
  notify: "php-fpm restart"

- name: "assertion exceptions"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    regexp: "^;?assert.exception ="
    line: "assert.exception = {{ php_fpm_assert_exception }}"
    state: present
  notify: "php-fpm restart"

- name: "extra settings"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_config_path }}"
    line: "{{ item.setting }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ php_fpm_extra_settings }}"
  when: item.setting is defined
  notify: "php-fpm restart"
